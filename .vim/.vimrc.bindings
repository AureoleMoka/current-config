let mapleader = ","
noremap t h
noremap T H
noremap s j
noremap r k
noremap n l

map <F5> :PREVCOLOR<CR>
map <F6> :NEXTCOLOR<CR>
nnoremap <F3> :NumbersToggle<CR>

noremap R <C-b>
noremap S <C-f>
inoremap <Tab> <Esc>
noremap <S-Tab> <Tab>

noremap é w
noremap ié iw

noremap j t
noremap J T
noremap l c
noremap L C
noremap h r
noremap H R
noremap k s
noremap K S

noremap e n
noremap E N
map <Leader>éc vié~
nmap <Space> i <Esc>
map <Leader># <Leader>c<Space>
map <Leader>" ysiw"
map <Leader>( ysiw(
map <Leader>[ ysiw[
map <Leader>` ysiw`
map <Leader>' ysiw'
noremap À qs
noremap à @s
noremap + <C-a>
noremap - <C-x>
map <Leader>s :source<Space>~/.vimrc<CR>



map w :w<CR>
map W :wq<CR>
map q :q<CR>
map Q :q!<CR>

noremap " 1
noremap 1 "
noremap « 2
noremap 2 <
noremap » 3
noremap 3 >
noremap ( 4
noremap 4 (
noremap ) 5
noremap 5 )
noremap @ 6
noremap 6 @
noremap + 7
noremap 7 +
noremap - 8
noremap 8 -
noremap / 9
noremap 9 /
noremap * 0
noremap 0 *
